function [v_mean, time]= makeCoherentBTS(file_names, radius, with_shear)
if iscell(file_names)
    for i= 1:length(file_names)
        makeCoherentBTS(file_names{i})
    end
    return
end

[velocity, twrVelocity, y, z, zTwr, ~, ~, ~, ~, dt, zHub, z1,mffws]= readfile_BTS(file_names);

[Z, Y]= meshgrid(z, y);
if exist('radius', 'var') && ~isempty(radius)
    i_rot= (Y.^2+(Z-zHub).^2) <= radius^2;
else
    i_rot= true(size(Y));
end
velocity= reshape(velocity, size(velocity, 1), 3, size(velocity, 3)*size(velocity, 4));

if exist('with_shear', 'var') && with_shear
    f_ext= '_shear.bts';
    v= zeros(size(velocity, 1), 3, 2, 2);
    v_mean= zeros(size(velocity, 1), 3);
    for i= 1:3
        vel_shear= [ones(sum(i_rot(:)), 1) Y(i_rot(:)) Z(i_rot(:))-zHub]\squeeze(velocity(:, i, i_rot(:)))';

        twrVelocity(:, i, :)= permute(repmat(vel_shear(1, :)', 1, size(twrVelocity, 3)) + vel_shear(3, :)'*(zTwr-zHub), [1 3 2]);
        v(:, i, 1, 1)= vel_shear(1, :)' + y(1)*vel_shear(2, :)' + (z(1)-zHub)*vel_shear(3, :)';
        v(:, i, 2, 1)= vel_shear(1, :)' + y(end)*vel_shear(2, :)' + (z(1)-zHub)*vel_shear(3, :)';
        v(:, i, 1, 2)= vel_shear(1, :)' + y(1)*vel_shear(2, :)' + (z(end)-zHub)*vel_shear(3, :)';
        v(:, i, 2, 2)= vel_shear(1, :)' + y(end)*vel_shear(2, :)' + (z(end)-zHub)*vel_shear(3, :)';
        v_mean(:, i)= vel_shear(1, :)';
    end
    velocity= v;
else
    v_mean= mean(velocity(:, :, i_rot(:)), 3);
    twrVelocity= repmat(v_mean, 1, 1, size(twrVelocity, 3));

    velocity= repmat(velocity, 1, 1, 2, 2);
    f_ext= '_coh.bts';
end

if nargout>0
    if nargout>1
        time= (0:(length(velocity)-1))*dt;
    end
    return
end

y= [y(1) y(end)];
dy= diff(y);
z= [z(1) z(end)];
dz= diff(z);


writefile_BTS(strrep(file_names, '.bts', f_ext), 'Generated by script "makeCoherentBTS"', velocity, twrVelocity, dz, dy, dt, zHub, z1, mffws)

